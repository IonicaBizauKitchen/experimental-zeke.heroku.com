{
  "name": "marky-mark",
  "version": "0.2.0",
  "author": {
    "name": "Rick Bergfalk",
    "email": "rick.bergfalk@gmail.com",
    "url": "http://rickbergfalk.com/"
  },
  "description": "Reads a directory of markdown files with meta-data/front-matter and parses it out. Add your favorite templating language and markdown parser to make your own static site generator",
  "keywords": [
    "markdown",
    "static",
    "site",
    "generator",
    "tool",
    "utility",
    "jifasnif"
  ],
  "scripts": {
    "test": "node ./test/test.js"
  },
  "dependencies": {
    "js-yaml": "2.0.x",
    "marked": "0.2.x"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/rickbergfalk/marky-mark"
  },
  "main": "marky-mark",
  "readme": "# Marky-mark\r\n\r\nMarky-mark helps you consume all your markdown files used for static-site generation. \r\n\r\nIt reads a directory of files with yaml meta-data/front-matter and parses it out. \r\nAnd if the extension is a markdown one it'll generate the html of that markdown. \r\nAdd your favorite templating language and markdown parser to make your own static site generator. \r\n\r\n## Usage\r\n\r\nLet's assume you have a folder of markdown files that optionally have front-matter/meta-data, looking something like this:\r\n\r\n```markdown\r\n--- \r\ntitle: Marky Mark. A retrospective.\r\ntags:\r\n\t- music\r\n\t- 90s\r\nwhatever: you want\r\n---\r\n\r\n## A Blog Post\r\n \r\nA blog post about how I can't believe Mark Wahlberg is Marky Mark. \r\nWritten in markdown of course.\r\n```\r\n\r\nYou can use marky-mark to easily grab all that data and stick it in an array of javascript objects. \r\nAll you have to do is:\r\n\r\n```js\r\nvar mm = require('marky-mark');\r\nvar posts = mm.parseDirectorySync(__dirname + \"/path/to/posts\");\r\nconsole.log(JSON.stringify(posts, null, 2));\r\n```\r\n\r\nThe output will be an array of objects, with each object representing 1 file. \r\nThe front-matter/meta-data is parsed via js-yaml. \r\nThe parsed result is in the meta property, but the original yaml content is stored in the yaml property in case you want to do something with it.\r\n\r\n```js\r\n// this is what .parseDirectorySync() returns\r\n[\r\n  {\r\n    filename: \"My Marky Mark post.md\",\r\n    yaml: \"title: Marky Mark. A retrospective.\\ntags: ...\",\r\n    markdown: \"\\n## A Blog Post\\n\\nA blog post about how I ...\",\r\n\tcontent: \"<h2>A Blog Post</h2><p>A blog post about how I ...\",\r\n    meta: {\r\n\t  title: \"Marky Mark. A retrospective.\",\r\n\t  tags: [\"music\", \"90s\"],\r\n\t  whatever: \"you want\"\r\n\t}\r\n  },\r\n  {\r\n\t... another file's contents ...\r\n  }\r\n]\r\n```\r\n\r\nAnd that's it. It's up to you to do something with all the data marky-mark just read.\r\n\r\n\r\n## Recommended Pairings\r\n\r\nBecause marky-mark doesn't do anything but read and parse files meant for static-site generators, you'll want to pair it up with other sweet modules to create your own site generator (the funky-bunch approach).\r\n\r\nHere are some suggested modules that are fun to use with marky-mark:\r\n\r\n- a templating library (EJS, Jade, eco, handlebars, mustache, etc.)\r\n- a date formatting library (such as moment)\r\n- a map/reduce or javascript object querying library (I've found taffydb to be super helpful)\r\n- a css preprocessor (like LESS)\r\n\r\nIf you want to get even crazier, add an http server and a file-watching thing. \r\nThen you can generate your site automatically as you write, and see a live preview.\r\nLevel up your system and automate your deployment.\r\n\r\n\r\n## Notes\r\n\r\nRight now marky-mark just parses a directory of markdown files, that optionally have front-matter in yaml. \r\nIt was a challenge for myself, and something I found useful.\r\n\r\nAll file reading is sync only - I didn't think async was necessary here...\r\n\r\nThere are lots of ideas for future development in the code, which is relatively simple and small. \r\nIf anyone wants to add any of these features or add a new one, or improve the code I've already written, feel free. \r\n\r\nPull requests welcome.\r\n\r\n\r\n## Installation\r\n\r\n```js\r\nnpm install marky-mark\r\n```\r\n\r\n\r\n## License \r\n\r\nMIT",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/rickbergfalk/marky-mark/issues"
  },
  "_id": "marky-mark@0.2.0",
  "dist": {
    "shasum": "76412a2beab6228ecec3f5bbe6329fbd06289688"
  },
  "_from": "marky-mark@",
  "_resolved": "https://registry.npmjs.org/marky-mark/-/marky-mark-0.2.0.tgz"
}
