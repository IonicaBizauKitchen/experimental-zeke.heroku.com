{
  "name": "markdown-directory",
  "version": "0.1.0",
  "description": "serve markdown files from a directory as html",
  "main": "index.js",
  "dependencies": {
    "through": "~2.3.4",
    "concat-stream": "~1.0.0",
    "marked": "~0.2.9"
  },
  "devDependencies": {
    "hyperstream": "~0.2.0",
    "tap": "~0.4.0"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/markdown-directory.git"
  },
  "homepage": "https://github.com/substack/markdown-directory",
  "keywords": [
    "markdown",
    "html",
    "stream"
  ],
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "license": "MIT",
  "readme": "# markdown-directory\n\nserve markdown files from a directory as html\n\n[![build status](https://secure.travis-ci.org/substack/markdown-directory.png)](http://travis-ci.org/substack/markdown-directory)\n\n# example\n\nTo render some markdown files in `articles/`, you could write:\n\n``` js\nvar http = require('http');\nvar fs = require('fs');\nvar hyperstream = require('hyperstream');\nvar article = require('markdown-directory')(__dirname + '/articles');\n\nvar server = http.createServer(function (req, res) {\n    var m = RegExp('^/article/(.+)').exec(req.url);\n    if (m) {\n        res.setHeader('content-type', 'text/html');\n        \n        fs.createReadStream(__dirname + '/article.html')\n            .pipe(hyperstream({\n                'title': m[1],\n                '#article': article(m[1]),\n            }))\n            .pipe(res)\n        ;\n    }\n    else res.end('beep boop\\n')\n});\nserver.listen(9000);\n```\n\nNow your markdown will be rendered into the article div of `article.html`:\n\n```\n$ curl -s http://localhost:9000/article/robot\n<html>\n  <head>\n    <title>robot</title>\n  </head>\n  <body>\n    <div id=\"article\"><h1>robots</h1>\n<p>Beep boop.</p>\n</div>\n  </body>\n</html>\n```\n\n# methods\n\n``` js\nvar mdir = require('markdown-directory')\n```\n\n## var article = mdir(dir)\n\nReturn a function `article(name)` for loading markdown files from the base\ndirectory `dir`.\n\n## var stream = article(name)\n\nReturn a readable stream for the markdown file `name + '.markdown'`.\n\n`stream` will emit an `'error'` event but it has a default listener that inlines\nthe error message into the output stream so you don't need to worry about\nhandling messages unless you care especially much about setting the http status\ncodes on the response. The `'error'` events have a `.statusCode` property that\nyou can copy onto `res.statusCode` yourself if you want that.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install markdown-directory\n```\n\n# license\n\nMIT\n",
  "readmeFilename": "readme.markdown",
  "bugs": {
    "url": "https://github.com/substack/markdown-directory/issues"
  },
  "_id": "markdown-directory@0.1.0",
  "dist": {
    "shasum": "4f32f68f853c63e6cec785cb28dbe3fdae1c9f66"
  },
  "_from": "markdown-directory@",
  "_resolved": "https://registry.npmjs.org/markdown-directory/-/markdown-directory-0.1.0.tgz"
}
